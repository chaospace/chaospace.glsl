[
	{
		"label":"Work",
		"items":[
			{
				"title":"Renobit",
				"thumb":"assets/images/renobit.jpg",
				"color":"#0d1a2a",
				"description":[
					"모니터링 데이터 시각화 제품으로 크게 <strong>에디터</strong>, <strong>뷰어</strong>, 기능확장을 위한 <strong>플러그인</strong>으로 구성된다.",
					"제품 규모가 큰 만큼 다양한 요구사항과 컴포넌트( 2D, 3D )가 필요했고 효율적으로 관리할 수 있는",
					"공통 인터페이스 구축에 많은 노력을 했고 다양한 프론트 기술을 경험한 프로젝트.",
					"최신 프론트 기술이 주가 되는 서비스라면 이제는 제품스펙에서 ie11을 제외하는 것도 제품성장을 위해서는 나쁜게 아니라는 생각이 들었다."
				],
				"summary":{
					"environment":"TypeScript, Vue, Node, Threejs",
					"implements" :[
						"DisplayObject, 2D, 3D컴포넌트 코어 패키지",
						"에디터 2D컴포넌트(dom, svg) multiTransformTool",
						"Three.js를 이용한 3D컴포넌트"
					]
				},
				"relation":{
					"movie":{
						"src"		:"https://www.youtube.com/embed/SCLZihl8LC8?rel=0&amp;autoplay=0&amp;showinfo=0",
						"allow"	:"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture"
					}
				},
				"url"		:"",
				"component"	:""
			},
			{
				"title":"CJ NINE BRIDGES",
				"color":"#e56767",
				"thumb":"assets/images/nine.jpg",
				"description":[
					"CJ CUP NINE BRIDGES 사이트",
					"반응형 사이트지만 메뉴별 디자인이 많이 다른구조라 반응형 구성에 노력을 많이 한 프로젝트",
					"course, tournament info같은 메뉴는 media query로는 반응형 처리가 힘들어 javascript를 많이 사용했다."
				],
				"summary":{
					"environment":"JavaScript, scrollReveal, HTML, CSS",
					"implements" :[
						"스크롤에 따른 애니메이션 처리",
						"이미지 갤러리( youToube 영상지원, 풀스크린 토글 )"
					]
				},
				"relation":{
					"images":[
						"assets/images/nine/thumb_0.jpg",
						"assets/images/nine/thumb_1.jpg"
					]
				},
				"url"			:"https://thecjcup.com:452/course.asp"
			},
			{
				"title":"Chronicles of Luke",
				"color":"#141311",
				"thumb":"assets/images/luke.jpg",
				"description":[
					"던전앤파이터 해외 프로모션 사이트.",
					"마우스 휠에 따른 가로이동과 패럴럭스 효과를 통한 그래픽요소 제어가 주요 이슈였다.",
					"게임 일러스트가 크고 화려해 진행하며 만족도가 높았던 프로젝트."
				],
				"summary":{
					"environment":"JavaScript, TweenMax",
					"implements" :[
						"타임라인 객체를 통한 스크롤및 애니메이션요소 관리",
						"애니메이션 렌더러를 이용한 트랜지션"
					]
				},
				"relation":{
					"images":[
						"assets/images/parallax/thumb_0.jpg",
						"assets/images/parallax/thumb_1.jpg",
						"assets/images/parallax/thumb_2.jpg"
					]
				},
				"url"			:"http://www.dfoneople.com/news/updates/Chronicles-of-Luke"
			},
			{
				"title":"Samsung Membership",
				"thumb":"assets/images/sam_membership.jpg",
				"color":"#0057b8",
				"description":[
					"삼성전자 멤버십 사이트",
					"내부 보안가이드가 프로젝트보다 더 힘들었던 기억이 있는 프로젝트.",
					"진행중 ios버전 업데이트가 있어 swift3.0을 경험한 프로젝트."
				],
				"summary":{
					"environment":"IOS, swift3.0, JavaScript",
					"implements" :[
						"jsContext를 이용한 jsInterface",
						"커스텀 AlertView",
						"푸시알림"
					]
				},
				"relation":{
					"images":[
						"assets/images/sam_membership/thumb_0.jpg",
						"assets/images/sam_membership/thumb_1.jpg"
					]
				},
				"url"			:"https://membership.samsung.com/sec"
			},
			{
				"title":"P.K Game",
				"color":"#a88e68",
				"thumb":"assets/images/socketio.jpg",
				"description":[
					"socketIO를 활용한 미니게임.",
					"뷰(폰과 브라우저)는 socket을 통해 통신하고 폰에서 유저가 공을 던지면 던진 방향에 따라 브라우저가 반응해 공이 날아간다.",
					"당시 떠오르던 node와 coffeescript를 경험할 수 있었던 프로젝트"
				],
				"summary":{
					"environment":"JavaScript, coffeeScript, Node, ActionScript",
					"implements" :[
						"node를 이용간 채팅룸 구성",
						"컨트롤 뷰 구현(스마트폰)",
						"디스플레이 뷰 구현(플래시)"
					]
				},
				"relation":{
					"images":[
						"assets/images/socketio/thumb_0.jpg",
						"assets/images/socketio/thumb_1.jpg",
						"assets/images/socketio/thumb_2.jpg"
					]
				}
			},
			{
				"title":"Korean Air",
				"color":"#4195ba",
				"thumb":"assets/images/korean_air.jpg",
				"description":[
					"대한항공 프랑스 데스티네이션 디지털 캠페인",
					"'프랑스 게스트 하우스 입주자를 모집합니다.' 라는 컨셉에 맞게 각 지역별 게스트 하우스 정보와 함께 메인 컨텐츠로의 접근성을 높여 고객이 입주지원에 쉽게 참여할 수 있도록 하였다.",
					"버스쉘터 배너광고로 미술작품과 함께 비콘을 설치해 앱 사용자가 접근할 경우 작품설명을 푸시알림으로 보여주는 기능을 구현했다.",
					"당시에는 참신한 아이디어로 즐거웠지만 버스쉘터에 설치한 비콘을 따라 동작 테스트를 하기 위해 버스정류장을 엄청 돌아다녔던 프로젝트"
				],
				"summary":{
					"environment":"JavaScript, IOS, Android, Siwft2.0",
					"implements" :[
						"비콘을 이용한 푸시알림"
					]
				},
				"relation":{
					"images":[
						"assets/images/korean_air/thumb_0.jpg"
					]
				},
				"url":"http://france.koreanair.com/live/list.asp"
			},
			{
				"title":"Hyundai Webzine",
				"color":"#747f84",
				"thumb":"assets/images/hyundai.jpg",
				"description":[
					"현대 자동차 웹진",
					"전시관 부스에 배치된 iPad에 설치한 앱으로 관람객이 볼 때 지루하지 않게 페이지 별 Transition효과에 신경을 많이 섰다.",
					"스토어 배포가 아닌 상황에서 수정에 효율적인 대응을 위해 Animation정보와 텍스트를 외부설정 파일로 관리한 프로젝트"
				],
				"summary":{
					"environment":"IOS, Objective-C",
					"implements" :[
						"다국어 처리 및 설정에 따른 이미지 전환",
						"페이지 이동에 따른 에니메이션 구현"
					]
				},
				"relation":{
					"images":[
						"assets/images/hyundai/thumb_0.jpg",
						"assets/images/hyundai/thumb_1.jpg",
						"assets/images/hyundai/thumb_2.jpg"
					]
				}
			},
			{
				"title":"StoryAlbum",
				"color":"#3c4c5b",
				"thumb":"assets/images/story.jpg",
				"description":[
					"플래시의 jsfl을 이용한 포토앨범제작 툴",
					"손쉬운 포토앨범 생성을 컨셉으로 복잡한 편집없이 누구나 쉽게 포토앨범을 만들 수 있게 하는게 목표였다.",
					"지금은 역사의 뒤안길로 사라졌지만 jsfl을 통해 플래시 제작툴의 기능을 제어하는 재미가 있었던 프로젝트"
				],
				"summary":{
					"environment":"as3.0, flash builder, jsfl",
					"implements" :[
						"테마이펙트 및 타임라인 설계",
						"관리자 편집 기능",
						"타입에 따른 앨범 플레이어(관리자, 사용자, 미리보기)"
					]
				},
				"relation":{
					"images":[
						"assets/images/story/thumb_0.jpg",
						"assets/images/story/thumb_1.jpg"
					]
				}
			},
			{
				"title":"E-LiveZine",
				"thumb":"assets/images/eliveZine.jpg",
				"color":"#091544",
				"description":[
					"가상프린터를 이용한 e카달로그 서비스",
					"책 넘기는 효과부터 다양한 포맷의 디스플레이 처리까지 많은 고민을 하며 진행한 기억이 있다.",
					"많아지는 객체 수에 확장과 인터페이스를 적용하며 디자인패턴을 규모있게 적용한 첫 프로젝트",
					"객체관리에 인터페이스의 중요함을 알게됐다."
				],
				"summary":{
					"environment":"as2.0, flash, flashDeveloper",
					"implements" :[
						"ebook & 플러그인",
						"다양한 형태의 뷰어( 펼친페이지, 가로형, embeded형)",
						"페이지 프리&지연 로드, 색인기능"
					]
				},
				"relation":{
					"images":[
						"assets/images/eliveZine/thumb_0.jpg"
					]
				}
			}
		]
	},
	{
		"label":"Study",
		"items":[
			{
				"title":"Particles",
				"thumb":"assets/images/particle.jpg",
				"color":"#283149",
				"description":[
					"particle을 이용한 이미지 표현",
					"이미지의 컬러정보를 바탕으로 마우스에 반응하는 particle을 만든다."
				],
				"summary":{
					"environment":"Threejs, shader, canvas"
				},
				"relation":{
					"images":[
						"assets/images/glsl_particle/thumb_0.jpg",
						"assets/images/glsl_particle/thumb_1.jpg"
					]
				},
				"component":{
					"name":"ParticleGLSL",
					"resources":[
						"assets/images/glsl_particle/glsl_particle.png",
						"assets/images/glsl_particle/glsl_particle1.png",
						"assets/images/glsl_particle/glsl_particle2.png",
						"assets/images/glsl_particle/glsl_particle3.png",
						"assets/images/glsl_particle/glsl_particle4.png"
					],
					"backgroundColors":[
						"#000000",
            			"#000000",
            			"#000000",
            			"#000000",
            			"#000000"
					]
				}
			},
			{
				"title":"Displacement",
				"thumb":"assets/images/replace_01.jpg",
				"color":"#b2a8e5",
				"description":[
					"shader를 이용한 Displacement효과",
					"두 개의 텍스처(image, noise)를 이용해 효과를 만들고 smoothstep을 이용해 전환시킨다."
				],
				"summary":{
					"environment":"Threejs, shader"
				},
				"relation":{
					"images":[
						"assets/images/displacement/thumb_0.jpg",
						"assets/images/displacement/thumb_1.jpg"
					]
				},
				"component":{
					"name":"DisplacementGLSL",
					"resources":[
						"assets/images/replace_05.jpg",
						"assets/images/replace_08.jpg"
					]
				}
			},
			{
				"title":"Displacement2",
				"thumb":"assets/images/channel.jpg",
				"color":"#9e3732",
				"description":[
					"shader를 이용한 Displacement효과",
					"전환하는 texture의 rgb값을 이용해 효과를 만들고 mix를 이용해 전환시킨다."
				],
				"summary":{
					"environment":"JavaScript, Threejs"
				},
				"relation":{
					"images":[
						"assets/images/channel/thumb_0.jpg",
						"assets/images/channel/thumb_1.jpg"
					]
				},
				"component":{
					"name":"ChannelMixGLSL",
					"resources":[
						"assets/images/channel/batman_logo.jpg",
						"assets/images/channel/batman_0.jpg",
						"assets/images/channel/batman_1.jpg",
						"assets/images/channel/batman_2.jpg",
						"assets/images/channel/batman_3.jpg",
						"assets/images/channel/batman_4.jpg"
					]
				}
			},
			{
				"title":"Tree",
				"thumb":"assets/images/recursive.jpg",
				"color":"#254834",
				"description":[
					"재귀함수를 이용한 Tree",
					"플래시 초반 Graphics에서 자주 이용하던 고전적인 표현이지만 canvas에 globalComposite옵션을 이용하니 느낌이 많이 달른 느낌."
				],
				"summary":{
					"environment":"JavaScript, Canvas, Threejs"
				},
				"relation":{
					"images":[
						"assets/images/recursive_tree/thumb_0.jpg",
						"assets/images/recursive_tree/thumb_1.jpg"
					]
				},
				"component":{
					"name":"RecursiveTreeGLSL"
				}
			},
			{
				"title":"Block Build",
				"color":"#707070",
				"thumb":"assets/images/bb.jpg",
				"description":[
					"PixiJS를 이용한 개인 프로젝트",
					"타일이 클릭&드래그 시 무한히 이어지는게 목표였는데 조금씩 살이 붙어 사이트 형태가 되었다.",
					"모바일은 고려하지 않았으며 ie10이상에서 동작한다."
				],
				"summary":{
					"environment":"JavaScript, PixiJS, Howljs, TweenLite, HTML, CSS",
					"implements" :[
						"블럭 타입에 따른 블럭아이템 구성",
						"드래그앤 드랍에 따른 블럭 생성",
						"블럭 추가 시 위치에 기반한 트랜지션",
						"카테고리 타입에 따른 뷰 갱신",
						"블럭 마우스 오버바향에 따른 트랜지션"
					]
				},
				"relation":{
					"images":[
						"assets/images/bb/thumb_0.jpg",
						"assets/images/bb/thumb_1.jpg"
					]
				},
				"url":"https://chaospace.github.io/bbproject/"
			},
			{
				"title":"ParticleNode",
				"color":"#262626",
				"thumb":"assets/images/particle_node.jpg",
				"description":[
					"Canvas를 이용한 인터렉티브 작업",
					"일정간격마다 랜덤한 숫자의 파티클을 생성해 보여주고 마우스를 움직이면 추가 파티클 생성한다.",
					"각 파티클은 움직이다 일정거리안에 있는 노드를 감지하면 라인으로 연결된다."
				],
				"summary":{
					"environment":"JavaScript, Canvas",
					"implements" :[
						"particle emitter"
					]
				},
				"relation":{
					"images":[
						"assets/images/particle_node/thumb_1.jpg"
					]
				},
				"url":"http://chaospace.github.io/particle-node/"
			}
		]
	}


]
